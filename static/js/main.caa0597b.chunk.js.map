{"version":3,"sources":["api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["users","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","todos","userId","title","completed","preparedTodos","map","todo","user","find","App","useState","visibleTodos","setVisibleTodos","setTitle","selectedUserId","setSelectedUserId","setCompleted","isTitleError","setIsTitleError","isUserSelectedError","setIsUserSelectedError","handleChange","event","target","value","checked","replace","className","onSubmit","preventDefault","newTodo","Date","now","addTodo","htmlFor","type","placeholder","onChange","disabled","length","classNames","onClick","todoId","status","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.caa0597b.chunk.js","sourcesContent":["const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './App.css';\n\nimport users from './api/users';\nimport todos from './api/todos';\n\ninterface User {\n  id: number,\n  name: string,\n  email: string,\n}\n\ninterface Todo {\n  id: number,\n  userId: number,\n  title: string,\n  completed: boolean,\n  user: User | null,\n}\n\nconst preparedTodos: Todo[] = todos.map(todo => {\n  return {\n    ...todo,\n    user: users.find(user => user.id === todo.id) || null,\n  };\n});\n\nconst App: React.FC = () => {\n  const [visibleTodos, setVisibleTodos] = useState(preparedTodos);\n  const [title, setTitle] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [completed, setCompleted] = useState(false);\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [isUserSelectedError, setIsUserSelectedError] = useState(false);\n\n  const handleChange = (\n    event: any,\n  ) => {\n    const { name, value, checked } = event.target;\n\n    setIsTitleError(false);\n    setIsUserSelectedError(false);\n\n    switch (name) {\n      case 'title':\n\n        return setTitle(value.replace(/[^a-zA-Zа-яА-Я0-9 ]/g, ''));\n\n      case 'selectedUserId':\n\n        return setSelectedUserId(+value);\n\n      case 'completed':\n        return setCompleted(checked);\n\n      default:\n        return value;\n    }\n  };\n\n  const addTodo = () => {\n    const newTodo: Todo = {\n      id: Date.now(),\n      userId: selectedUserId,\n      title,\n      completed,\n      user: users.find(user => user.id === selectedUserId) || null,\n    };\n\n    return setVisibleTodos([...visibleTodos, newTodo]);\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setSelectedUserId(0);\n    setCompleted(false);\n  };\n\n  const toggleTask = (todoId: number, status: boolean) => {\n    setVisibleTodos(\n      visibleTodos.map(todo => {\n        if (todo.id === todoId) {\n          return { ...todo, completed: !status };\n        }\n\n        return todo;\n      }),\n    );\n  };\n\n  const removeTodo = (todoId:number) => {\n    setVisibleTodos(\n      visibleTodos.filter(\n        todo => todo.id !== todoId,\n      ),\n    );\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (title === '' && selectedUserId === 0) {\n      setIsTitleError(true);\n      setIsUserSelectedError(true);\n\n      return;\n    }\n\n    if (title === '') {\n      setIsTitleError(true);\n\n      return;\n    }\n\n    if (selectedUserId === 0) {\n      setIsUserSelectedError(true);\n\n      return;\n    }\n\n    addTodo();\n    resetForm();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <form\n        onSubmit={handleSubmit}\n      >\n\n        <label htmlFor=\"title\">\n          {'Title: '}\n          <input\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            placeholder=\"Enter task title\"\n            value={title}\n            onChange={handleChange}\n          />\n          {isTitleError && (\n            <span>Enter a valid title</span>\n          )}\n        </label>\n\n        <label htmlFor=\"selectedUserId\">\n          {'Select user: '}\n          <select\n            name=\"selectedUserId\"\n            id=\"selectedUserId\"\n            value={selectedUserId}\n            onChange={handleChange}\n          >\n            <option value={0} disabled>Choose a user</option>\n            {users.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {isUserSelectedError && (\n            <span>Select a user</span>\n          )}\n        </label>\n\n        <label htmlFor=\"completed\">\n          {'Status: '}\n          <input\n            type=\"checkbox\"\n            id=\"completed\"\n            name=\"completed\"\n            checked={completed}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button\n          type=\"submit\"\n          className=\"button-form-submit\"\n        >\n          Create new task\n        </button>\n\n      </form>\n      {visibleTodos.length > 0 && (\n        <>\n          <h1>Todo list</h1>\n          <ul>\n            {visibleTodos.map(todo => (\n              <li key={todo.id} className={todo.completed ? 'completed' : ''}>\n                <div className=\"todo-info__container\">\n                  <div className=\"todo-info\">\n                    <h1>\n                      {'Title: '}\n                      {todo.title}\n                    </h1>\n                    <p>\n                      {'Status: '}\n                      {todo.completed ? 'Completed' : 'In progress'}\n                    </p>\n                    <p>\n                      {'Name: '}\n                      {todo.user?.name}\n                    </p>\n                    <p>\n                      {'Email: '}\n                      {todo.user?.email}\n                    </p>\n                  </div>\n                  <div className=\"todo-controls\">\n                    <button\n                      type=\"button\"\n                      className={classNames('button-todo-control', 'toggle')}\n                      onClick={() => toggleTask(todo.id, todo.completed)}\n                    >\n                      Toggle status\n                    </button>\n                    <button\n                      type=\"button\"\n                      className={classNames('button-todo-control', 'remove')}\n                      onClick={() => removeTodo(todo.id)}\n                    >\n                      Remove task\n                    </button>\n                  </div>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}